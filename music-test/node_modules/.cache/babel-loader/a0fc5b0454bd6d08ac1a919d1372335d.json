{"ast":null,"code":"// 首先是一个立即执行函数，执行时传入的参数是window和document\n(function flexible(window, document) {\n  var docEl = document.documentElement; // 返回文档的root元素\n\n  var dpr = window.devicePixelRatio || 1; // 获取设备的dpr，即当前设置下物理像素与虚拟像素的比值\n  // 调整body标签的fontSize，fontSize = (12 * dpr) + 'px'\n  // 设置默认字体大小，默认的字体大小继承自body\n\n  function setBodyFontSize() {\n    if (document.body) {\n      document.body.style.fontSize = 12 * dpr + 'px';\n    } else {\n      document.addEventListener('DOMContentLoaded', setBodyFontSize);\n    }\n  }\n\n  setBodyFontSize(); // set 1rem = viewWidth / 10\n  // 设置root元素的fontSize = 其clientWidth / 10 + ‘px’\n\n  function setRemUnit() {\n    var rem = docEl.clientWidth / 10;\n    docEl.style.fontSize = rem + 'px';\n  } // 移动端的适配如何做\n  // (1): 所有的css单位, rem    (vscode可以自动把px转成rem, pxtorem插件设置基准值37.5) - 1rem等于37.5px\n  //  原理: rem要根据html的font-size换算\n  //  目标: 网页宽度变小, html的font-size也要变小, ...网页变大, html的font-size变大.\n  // (2): flexible.js (专门负责当网页宽度改变, 会修改html的font-size)\n\n\n  setRemUnit(); // 当我们页面尺寸大小发生变化的时候，要重新设置下rem 的大小\n\n  window.addEventListener('resize', setRemUnit); // pageshow 是我们重新加载页面触发的事件\n\n  window.addEventListener('pageshow', function (e) {\n    // e.persisted 返回的是true 就是说如果这个页面是从缓存取过来的页面，也需要从新计算一下rem 的大小\n    if (e.persisted) {\n      setRemUnit();\n    }\n  }); // 检测0.5px的支持，支持则root元素的class中有hairlines\n\n  if (dpr >= 2) {\n    var fakeBody = document.createElement('body');\n    var testElement = document.createElement('div');\n    testElement.style.border = '.5px solid transparent';\n    fakeBody.appendChild(testElement);\n    docEl.appendChild(fakeBody);\n\n    if (testElement.offsetHeight === 1) {\n      docEl.classList.add('hairlines');\n    }\n\n    docEl.removeChild(fakeBody);\n  }\n})(window, document);","map":{"version":3,"names":["flexible","window","document","docEl","documentElement","dpr","devicePixelRatio","setBodyFontSize","body","style","fontSize","addEventListener","setRemUnit","rem","clientWidth","e","persisted","fakeBody","createElement","testElement","border","appendChild","offsetHeight","classList","add","removeChild"],"sources":["D:/前端/text/网易云案例text/music-test/music_dome/src/mobile/flexible.js"],"sourcesContent":["// 首先是一个立即执行函数，执行时传入的参数是window和document\r\n(function flexible (window, document) {\r\n    var docEl = document.documentElement // 返回文档的root元素\r\n    var dpr = window.devicePixelRatio || 1 \r\n    // 获取设备的dpr，即当前设置下物理像素与虚拟像素的比值\r\n  \r\n    // 调整body标签的fontSize，fontSize = (12 * dpr) + 'px'\r\n    // 设置默认字体大小，默认的字体大小继承自body\r\n    function setBodyFontSize () {\r\n      if (document.body) {\r\n        document.body.style.fontSize = (12 * dpr) + 'px'\r\n      } else {\r\n        document.addEventListener('DOMContentLoaded', setBodyFontSize)\r\n      }\r\n    }\r\n    setBodyFontSize();\r\n  \r\n    // set 1rem = viewWidth / 10\r\n    // 设置root元素的fontSize = 其clientWidth / 10 + ‘px’\r\n    function setRemUnit () {\r\n      var rem = docEl.clientWidth / 10\r\n      docEl.style.fontSize = rem + 'px'\r\n    }\r\n    // 移动端的适配如何做\r\n    // (1): 所有的css单位, rem    (vscode可以自动把px转成rem, pxtorem插件设置基准值37.5) - 1rem等于37.5px\r\n    //  原理: rem要根据html的font-size换算\r\n    //  目标: 网页宽度变小, html的font-size也要变小, ...网页变大, html的font-size变大.\r\n    // (2): flexible.js (专门负责当网页宽度改变, 会修改html的font-size)\r\n  \r\n    setRemUnit()\r\n  \r\n  \r\n      // 当我们页面尺寸大小发生变化的时候，要重新设置下rem 的大小\r\n      window.addEventListener('resize', setRemUnit)\r\n          // pageshow 是我们重新加载页面触发的事件\r\n      window.addEventListener('pageshow', function(e) {\r\n          // e.persisted 返回的是true 就是说如果这个页面是从缓存取过来的页面，也需要从新计算一下rem 的大小\r\n          if (e.persisted) {\r\n              setRemUnit()\r\n          }\r\n      })\r\n  \r\n    // 检测0.5px的支持，支持则root元素的class中有hairlines\r\n    if (dpr >= 2) {\r\n      var fakeBody = document.createElement('body')\r\n      var testElement = document.createElement('div')\r\n      testElement.style.border = '.5px solid transparent'\r\n      fakeBody.appendChild(testElement)\r\n      docEl.appendChild(fakeBody)\r\n      if (testElement.offsetHeight === 1) {\r\n        docEl.classList.add('hairlines')\r\n      }\r\n      docEl.removeChild(fakeBody)\r\n    }\r\n  }(window, document))\r\n  "],"mappings":"AAAA;AACC,UAASA,QAAT,CAAmBC,MAAnB,EAA2BC,QAA3B,EAAqC;EAClC,IAAIC,KAAK,GAAGD,QAAQ,CAACE,eAArB,CADkC,CACG;;EACrC,IAAIC,GAAG,GAAGJ,MAAM,CAACK,gBAAP,IAA2B,CAArC,CAFkC,CAGlC;EAEA;EACA;;EACA,SAASC,eAAT,GAA4B;IAC1B,IAAIL,QAAQ,CAACM,IAAb,EAAmB;MACjBN,QAAQ,CAACM,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAAgC,KAAKL,GAAN,GAAa,IAA5C;IACD,CAFD,MAEO;MACLH,QAAQ,CAACS,gBAAT,CAA0B,kBAA1B,EAA8CJ,eAA9C;IACD;EACF;;EACDA,eAAe,GAdmB,CAgBlC;EACA;;EACA,SAASK,UAAT,GAAuB;IACrB,IAAIC,GAAG,GAAGV,KAAK,CAACW,WAAN,GAAoB,EAA9B;IACAX,KAAK,CAACM,KAAN,CAAYC,QAAZ,GAAuBG,GAAG,GAAG,IAA7B;EACD,CArBiC,CAsBlC;EACA;EACA;EACA;EACA;;;EAEAD,UAAU,GA5BwB,CA+BhC;;EACAX,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCC,UAAlC,EAhCgC,CAiC5B;;EACJX,MAAM,CAACU,gBAAP,CAAwB,UAAxB,EAAoC,UAASI,CAAT,EAAY;IAC5C;IACA,IAAIA,CAAC,CAACC,SAAN,EAAiB;MACbJ,UAAU;IACb;EACJ,CALD,EAlCgC,CAyClC;;EACA,IAAIP,GAAG,IAAI,CAAX,EAAc;IACZ,IAAIY,QAAQ,GAAGf,QAAQ,CAACgB,aAAT,CAAuB,MAAvB,CAAf;IACA,IAAIC,WAAW,GAAGjB,QAAQ,CAACgB,aAAT,CAAuB,KAAvB,CAAlB;IACAC,WAAW,CAACV,KAAZ,CAAkBW,MAAlB,GAA2B,wBAA3B;IACAH,QAAQ,CAACI,WAAT,CAAqBF,WAArB;IACAhB,KAAK,CAACkB,WAAN,CAAkBJ,QAAlB;;IACA,IAAIE,WAAW,CAACG,YAAZ,KAA6B,CAAjC,EAAoC;MAClCnB,KAAK,CAACoB,SAAN,CAAgBC,GAAhB,CAAoB,WAApB;IACD;;IACDrB,KAAK,CAACsB,WAAN,CAAkBR,QAAlB;EACD;AACF,CArDF,EAqDGhB,MArDH,EAqDWC,QArDX,CAAD"},"metadata":{},"sourceType":"script"}