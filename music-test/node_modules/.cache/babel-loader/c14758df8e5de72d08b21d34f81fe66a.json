{"ast":null,"code":"import { hotSearchAPI, searchResultAPI } from \"@/api\";\nimport searchGjz from '../../components/searchGjz';\nimport SearchJg from '../../components/searchJg.vue';\nexport default {\n  data() {\n    return {\n      value: '',\n      page: 1,\n      resultList: [],\n      //搜索结果\n      hotArr: [],\n      // 热搜关键字\n      loading: false,\n      finished: false\n    };\n  },\n\n  async created() {\n    const res = await hotSearchAPI();\n    console.log(res);\n    this.hotArr = res.data.result.hots;\n  },\n\n  components: {\n    searchGjz,\n    SearchJg\n  },\n  methods: {\n    async getListFn() {\n      return await searchResultAPI({\n        keywords: this.value,\n        limit: 20,\n        offset: (this.page - 1) * 20 // 固定公式\n\n      });\n    },\n\n    async fnres(val) {\n      // 点击热搜关键词\n      this.value = val; // 选中的关键词显示到搜索框\n\n      const res = await this.getListFn();\n      console.log(res);\n      this.resultList = res.data.result.songs;\n    },\n\n    async inputFn() {\n      if (this.value.length === 0) {\n        this.resultList = [];\n        return;\n      }\n\n      const res = await this.getListFn();\n      console.log(res);\n\n      if (res.data.result.songs === undefined) {\n        this.resultList = [];\n        return;\n      }\n\n      this.resultList = res.data.result.songs;\n    },\n\n    async Load() {\n      // 触底事件(要加载下一页的数据咯), 内部会自动把loading改为true\n      this.page++;\n      const res = await this.getListFn();\n\n      if (res.data.result.songs === undefined) {\n        // 没有更多数据了\n        console.log('没有数据了', this.resultList);\n        this.finished = true; // 全部加载完成(list不会在触发onload方法)\n\n        this.loading = false; // 本次加载完成\n\n        return;\n      }\n\n      this.resultList = [...this.resultList, ...res.data.result.songs];\n      this.loading = false; // 数据加载完毕-保证下一次还能触发onload\n\n      console.log('zhende', this.resultList);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAwBA;AACA;AACA;AACA;EACAA;IACA;MACAC,SADA;MAEAC,OAFA;MAGAC,cAHA;MAGA;MACAC,UAJA;MAIA;MACAC,cALA;MAMAC;IANA;EAQA,CAVA;;EAWA;IACA;IACAC;IACA;EAEA,CAhBA;;EAiBAC;IACAC,SADA;IAEAC;EAFA,CAjBA;EAqBAC;IAEA;MACA,6BACA;QACAC,oBADA;QAEAC,SAFA;QAGAC,4BAHA,CAGA;;MAHA,CADA;IAOA,CAVA;;IAWA;MACA;MACA,iBAFA,CAEA;;MACA;MACAP;MACA;IACA,CAjBA;;IAkBA;MACA;QACA;QACA;MACA;;MACA;MACAA;;MACA;QACA;QACA;MACA;;MACA;IAEA,CA/BA;;IAgCA;MACA;MACA;MACA;;MACA;QAAA;QACAA;QACA,qBAFA,CAEA;;QACA,qBAHA,CAGA;;QACA;MACA;;MACA;MACA,qBAXA,CAWA;;MACAA;IACA;;EA7CA;AArBA","names":["data","value","page","resultList","hotArr","loading","finished","console","components","searchGjz","SearchJg","methods","keywords","limit","offset"],"sourceRoot":"src/views/Search","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <van-search  shape=\"round\" v-model=\"value\" \r\n    @input=\"inputFn\"\r\n    placeholder=\"请输入搜索关键词\" />\r\n    <!-- 搜索下容器 -->\r\n      <div v-if=\"!resultList.length\">\r\n        <searchGjz \r\n        :hotArr = \"hotArr\" \r\n        @fnres = \"fnres\"></searchGjz>\r\n      </div>\r\n      <div v-else>\r\n        <search-jg\r\n        :finished=\"finished\"\r\n        loading\r\n        @onLoad=\"Load\" \r\n        :resultList = \"resultList\"> </search-jg>\r\n      </div>\r\n  </div>\r\n  \r\n\r\n</template>\r\n\r\n<script>\r\nimport { hotSearchAPI,searchResultAPI } from \"@/api\";\r\nimport searchGjz from '../../components/searchGjz'\r\nimport SearchJg from '../../components/searchJg.vue';\r\nexport default {\r\n    data() {\r\n    return {\r\n      value: '',\r\n      page: 1,\r\n      resultList:[],//搜索结果\r\n      hotArr: [], // 热搜关键字\r\n      loading: false,\r\n      finished: false,\r\n    };\r\n  },\r\n  async created() {\r\n            const res = await hotSearchAPI();\r\n            console.log(res);\r\n            this.hotArr = res.data.result.hots;\r\n            \r\n        },\r\n  components: {\r\n    searchGjz,\r\n    SearchJg\r\n  },\r\n  methods: {\r\n   \r\n    async  getListFn(){\r\n      return await searchResultAPI(\r\n          {\r\n              keywords: this.value,\r\n              limit: 20,\r\n              offset: (this.page - 1) * 20, // 固定公式\r\n          }\r\n      )\r\n        },\r\n     async fnres(val){\r\n      // 点击热搜关键词\r\n      this.value = val; // 选中的关键词显示到搜索框\r\n      const res = await this.getListFn();\r\n      console.log(res);\r\n      this.resultList = res.data.result.songs;\r\n    },\r\n    async inputFn(){\r\n      if(this.value.length === 0){\r\n        this.resultList = [];\r\n        return;\r\n      }\r\n      const res = await this.getListFn();\r\n      console.log(res);\r\n      if (res.data.result.songs === undefined) {\r\n      this.resultList = [];\r\n      return;\r\n    }\r\n      this.resultList = res.data.result.songs;\r\n      \r\n    },\r\n    async Load() {\r\n      // 触底事件(要加载下一页的数据咯), 内部会自动把loading改为true\r\n      this.page++;\r\n      const res = await this.getListFn();\r\n       if (res.data.result.songs === undefined) { // 没有更多数据了\r\n       console.log('没有数据了',this.resultList)\r\n        this.finished = true; // 全部加载完成(list不会在触发onload方法)\r\n       this.loading = false; // 本次加载完成\r\n       return;\r\n      }\r\n      this.resultList = [...this.resultList, ...res.data.result.songs];\r\n      this.loading = false; // 数据加载完毕-保证下一次还能触发onload\r\n      console.log('zhende',this.resultList)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}