{"ast":null,"code":"import \"vant/es/nav-bar/style\";\nimport _NavBar from \"vant/es/nav-bar\";\nimport \"vant/es/tabbar-item/style\";\nimport _TabbarItem from \"vant/es/tabbar-item\";\nimport \"vant/es/tabbar/style\";\nimport _Tabbar from \"vant/es/tabbar\";\nimport \"vant/es/row/style\";\nimport _Row from \"vant/es/row\";\nimport \"vant/es/col/style\";\nimport _Col from \"vant/es/col\";\nimport \"vant/es/image/style\";\nimport _Image from \"vant/es/image\";\nimport \"vant/es/cell/style\";\nimport _Cell from \"vant/es/cell\";\nimport \"vant/es/icon/style\";\nimport _Icon from \"vant/es/icon\";\nimport \"vant/es/search/style\";\nimport _Search from \"vant/es/search\";\nimport \"vant/es/list/style\";\nimport _List from \"vant/es/list\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport \"@/mobile/flexibl\"; // 适配\n\nimport \"@/styles/reset.css\"; // 初始化样式\n\nimport router from '@/router'; // 路由对象\n\nVue.use(_List);\nVue.use(_Search);\nVue.use(_Icon);\nVue.use(_Cell);\nVue.use(_Image);\nVue.use(_Col);\nVue.use(_Row);\nVue.use(_Tabbar);\nVue.use(_TabbarItem);\nVue.use(_NavBar); // 目标: 封装网络请求\n// 1. src/utils/request.js -  设置基地址, 导出axios函数\n// 2. src/api/Home.js - 请求方法axios({url: \"具体\"})\n// 3. src/api/index.js - 把Home.js里函数引入过来统一导出\n// 4. 具体逻辑页面, 引入api/index.js请求方法, async+await等待axios的结果回来\n// 测试封装的api方法\n// import {recommendMusicAPI} from '@/api'\n// async function fn(){\n//   const res = await recommendMusicAPI() // api方法原地会得到axios请求在原地的Promise对象(里面有一个ajax请求)\n//   console.log(res);\n// }\n// fn()\n\nVue.config.productionTip = false; // 目标: Vant组件库自动适配\n// 自动让所有px转成rem (以后我们可以直接写px) - webpack配合postcss和postcss-pxtorem插件就可以翻译css代码, 把px转rem使用\n// 1. 下载 postcss  postcss-pxtorem@5.1.1 (要和当前脚手架webpack兼容)\n// 2. postcss.config.js - 填入插件转换的基准值 (配置可以复制md)\n// 3. 一定要重启服务器, 观察效果\n\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","router","use","config","productionTip","render","h","$mount"],"sources":["D:/前端/text/网易云案例text/music-test/music_dome/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport \"@/mobile/flexibl\" // 适配\nimport \"@/styles/reset.css\" // 初始化样式\nimport router from '@/router' // 路由对象\n\nimport { Tabbar, TabbarItem, NavBar, Col, Row, Image as VanImage, Cell, Icon, Search, List } from 'vant';\n\nVue.use(List);\nVue.use(Search);\nVue.use(Icon);\nVue.use(Cell);\nVue.use(VanImage);\nVue.use(Col);\nVue.use(Row);\nVue.use(Tabbar);\nVue.use(TabbarItem);\nVue.use(NavBar);\n\n\n\n// 目标: 封装网络请求\n// 1. src/utils/request.js -  设置基地址, 导出axios函数\n// 2. src/api/Home.js - 请求方法axios({url: \"具体\"})\n// 3. src/api/index.js - 把Home.js里函数引入过来统一导出\n// 4. 具体逻辑页面, 引入api/index.js请求方法, async+await等待axios的结果回来\n\n// 测试封装的api方法\n// import {recommendMusicAPI} from '@/api'\n// async function fn(){\n//   const res = await recommendMusicAPI() // api方法原地会得到axios请求在原地的Promise对象(里面有一个ajax请求)\n//   console.log(res);\n// }\n// fn()\n\n\nVue.config.productionTip = false\n\n// 目标: Vant组件库自动适配\n// 自动让所有px转成rem (以后我们可以直接写px) - webpack配合postcss和postcss-pxtorem插件就可以翻译css代码, 把px转rem使用\n// 1. 下载 postcss  postcss-pxtorem@5.1.1 (要和当前脚手架webpack兼容)\n// 2. postcss.config.js - 填入插件转换的基准值 (配置可以复制md)\n// 3. 一定要重启服务器, 观察效果\n\nnew Vue({\n  router,\n  render: h => h(App),\n}).$mount('#app')\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAO,kBAAP,C,CAA0B;;AAC1B,OAAO,oBAAP,C,CAA4B;;AAC5B,OAAOC,MAAP,MAAmB,UAAnB,C,CAA8B;;AAI9BF,GAAG,CAACG,GAAJ;AACAH,GAAG,CAACG,GAAJ;AACAH,GAAG,CAACG,GAAJ;AACAH,GAAG,CAACG,GAAJ;AACAH,GAAG,CAACG,GAAJ;AACAH,GAAG,CAACG,GAAJ;AACAH,GAAG,CAACG,GAAJ;AACAH,GAAG,CAACG,GAAJ;AACAH,GAAG,CAACG,GAAJ;AACAH,GAAG,CAACG,GAAJ,U,CAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGAH,GAAG,CAACI,MAAJ,CAAWC,aAAX,GAA2B,KAA3B,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,IAAIL,GAAJ,CAAQ;EACNE,MADM;EAENI,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACN,GAAD;AAFR,CAAR,EAGGO,MAHH,CAGU,MAHV"},"metadata":{},"sourceType":"module"}